services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 2
    networks:
      - omniscient
  
  postgres_db:
    image: postgres:latest
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 60s
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=root
    networks:
      - omniscient
  
  cleaner-service:
    image: omniscient-cleaner-service
    depends_on:
      - rabbitmq
      - postgres_db
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
    networks:
      - omniscient
    deploy:
      restart_policy:
        condition: on-failure
  
  indexer-service:
    image: omniscient-indexer-service
    depends_on:
      - rabbitmq
      - postgres_db
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_CONNECTION_STRING=HOST=postgres_db;PORT=5432;DB=Omniscient;UID=root;PWD=password;
    networks:
      - omniscient
    deploy:
      restart_policy:
        condition: on-failure
      mode: replicated 
      replicas: 3
  
  blazor-ui:
    image: omniscient-blazor-ui
    depends_on:
      - indexer-service
    ports:
      - "8082:80"
    networks:
      - omniscient
  
  dotnet-aspire:
    image:  mcr.microsoft.com/dotnet/aspire-dashboard:latest
    ports:
      - "18888:18888"
      - "4317:18889"
    networks:
      - omniscient
  
  seq:
    image: datalust/seq
    ports:
      - "5341:5341"
      - "5342:80"
    volumes:
      - omniscient:/data
    environment:
      - ACCEPT_EULA=Y
    networks:
      - omniscient

volumes:
  omniscient:

networks:
  omniscient: