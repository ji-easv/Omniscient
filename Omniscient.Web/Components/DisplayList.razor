@using Omniscient.Shared
@using Omniscient.Shared.Dtos

<div class="email-grid">
    @if (Emails is null || Emails.TotalCount == 0)
    {
        <p>No emails found.</p>
    }
    
    else
    {
        <div class="list-group">
            @foreach (var email in Emails.Items)
            {
                <div class="list-group-item list-group-item-action" @onclick="() => ViewEmail(email)">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">@email.FileName</h5>
                    </div>
                    <p class="mb-1">@(email.ContentPreview + "...")</p>
                </div>
            }
        </div>

        <div class="pagination-container mt-3 d-flex justify-content-center">
            <nav>
                <ul class="pagination">
                    <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                        <button class="page-link" @onclick="() => GoToPage(CurrentPage - 1)"
                                disabled="@(CurrentPage == 1)">Previous
                        </button>
                    </li>

                    @for (var i = 1; i <= TotalPages; i++)
                    {
                        var pageNumber = i;
                        <li class="page-item @(CurrentPage == pageNumber ? "active" : "")">
                            <button class="page-link" @onclick="() => GoToPage(pageNumber)">@pageNumber</button>
                        </li>
                    }

                    <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                        <button class="page-link" @onclick="() => GoToPage(CurrentPage + 1)"
                                disabled="@(CurrentPage == TotalPages)">Next
                        </button>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired] public PaginatedList<EmailDto>? Emails { get; set; }

    [Parameter, EditorRequired] public EventCallback<int> OnPageChange { get; set; }

    [Parameter, EditorRequired] public EventCallback<EmailDto> OnEmailSelected { get; set; }

    private void GoToPage(int pageNumber)
    {
        OnPageChange.InvokeAsync(pageNumber);
    }

    private async Task ViewEmail(EmailDto emailDto)
    {
        await OnEmailSelected.InvokeAsync(emailDto);
    }

    private int CurrentPage => Emails?.PageIndex ?? 0;
    private int TotalPages => Emails?.TotalPages ?? 0;
    private int TotalItems => Emails?.TotalCount ?? 0;
}